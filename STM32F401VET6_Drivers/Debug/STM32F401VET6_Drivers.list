
STM32F401VET6_Drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000006d0  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000864  0800086c  0001086c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000864  08000864  0001086c  2**0
                  CONTENTS
  4 .ARM          00000000  08000864  08000864  0001086c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000864  0800086c  0001086c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000864  08000864  00010864  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000868  08000868  00010868  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001086c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800086c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800086c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0001086c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000f45  00000000  00000000  0001089c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000330  00000000  00000000  000117e1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000140  00000000  00000000  00011b18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000f8  00000000  00000000  00011c58  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000046a  00000000  00000000  00011d50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001249  00000000  00000000  000121ba  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000047a5  00000000  00000000  00013403  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00017ba8  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000003e0  00000000  00000000  00017bf8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	0800084c 	.word	0x0800084c

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	0800084c 	.word	0x0800084c

080001d4 <Delay_vMilliSecond16MHzoscillator>:
 */

#include "DELAY_UNIT.h"

extern void Delay_vMilliSecond16MHzoscillator(U16 copy_U16mSTime)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b085      	sub	sp, #20
 80001d8:	af00      	add	r7, sp, #0
 80001da:	4603      	mov	r3, r0
 80001dc:	80fb      	strh	r3, [r7, #6]
	volatile U16 u16Local_Count1 =0;
 80001de:	2300      	movs	r3, #0
 80001e0:	81fb      	strh	r3, [r7, #14]
	volatile U16 u16Local_Count2 =0;
 80001e2:	2300      	movs	r3, #0
 80001e4:	81bb      	strh	r3, [r7, #12]
	for(u16Local_Count1 = 0 ; u16Local_Count1 < copy_U16mSTime  ; u16Local_Count1++ )
 80001e6:	2300      	movs	r3, #0
 80001e8:	81fb      	strh	r3, [r7, #14]
 80001ea:	e012      	b.n	8000212 <Delay_vMilliSecond16MHzoscillator+0x3e>
	for(u16Local_Count2  = 0 ; u16Local_Count2  < 3180  ; u16Local_Count2 ++ )
 80001ec:	2300      	movs	r3, #0
 80001ee:	81bb      	strh	r3, [r7, #12]
 80001f0:	e004      	b.n	80001fc <Delay_vMilliSecond16MHzoscillator+0x28>
 80001f2:	89bb      	ldrh	r3, [r7, #12]
 80001f4:	b29b      	uxth	r3, r3
 80001f6:	3301      	adds	r3, #1
 80001f8:	b29b      	uxth	r3, r3
 80001fa:	81bb      	strh	r3, [r7, #12]
 80001fc:	89bb      	ldrh	r3, [r7, #12]
 80001fe:	b29b      	uxth	r3, r3
 8000200:	f640 426b 	movw	r2, #3179	; 0xc6b
 8000204:	4293      	cmp	r3, r2
 8000206:	d9f4      	bls.n	80001f2 <Delay_vMilliSecond16MHzoscillator+0x1e>
	for(u16Local_Count1 = 0 ; u16Local_Count1 < copy_U16mSTime  ; u16Local_Count1++ )
 8000208:	89fb      	ldrh	r3, [r7, #14]
 800020a:	b29b      	uxth	r3, r3
 800020c:	3301      	adds	r3, #1
 800020e:	b29b      	uxth	r3, r3
 8000210:	81fb      	strh	r3, [r7, #14]
 8000212:	89fb      	ldrh	r3, [r7, #14]
 8000214:	b29b      	uxth	r3, r3
 8000216:	88fa      	ldrh	r2, [r7, #6]
 8000218:	429a      	cmp	r2, r3
 800021a:	d8e7      	bhi.n	80001ec <Delay_vMilliSecond16MHzoscillator+0x18>
	{/* Do nothing for 1 ms*/}
}
 800021c:	bf00      	nop
 800021e:	bf00      	nop
 8000220:	3714      	adds	r7, #20
 8000222:	46bd      	mov	sp, r7
 8000224:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000228:	4770      	bx	lr
	...

0800022c <MGPIO_vSetPinMode>:
 */

#include "MCAL_GPIO_Interface.h"

void MGPIO_vSetPinMode(U8 PortName, U8 PinNum, U8 DirectionMode)
{
 800022c:	b480      	push	{r7}
 800022e:	b083      	sub	sp, #12
 8000230:	af00      	add	r7, sp, #0
 8000232:	4603      	mov	r3, r0
 8000234:	71fb      	strb	r3, [r7, #7]
 8000236:	460b      	mov	r3, r1
 8000238:	71bb      	strb	r3, [r7, #6]
 800023a:	4613      	mov	r3, r2
 800023c:	717b      	strb	r3, [r7, #5]
	/* INPUT_MODE, OUTPUT_MODE, ALTERNATE_FUNCTION_MODE, ANALOG_MODE */
	switch(PortName)
 800023e:	79fb      	ldrb	r3, [r7, #7]
 8000240:	2b05      	cmp	r3, #5
 8000242:	d857      	bhi.n	80002f4 <MGPIO_vSetPinMode+0xc8>
 8000244:	a201      	add	r2, pc, #4	; (adr r2, 800024c <MGPIO_vSetPinMode+0x20>)
 8000246:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800024a:	bf00      	nop
 800024c:	08000265 	.word	0x08000265
 8000250:	0800027d 	.word	0x0800027d
 8000254:	08000295 	.word	0x08000295
 8000258:	080002ad 	.word	0x080002ad
 800025c:	080002c5 	.word	0x080002c5
 8000260:	080002dd 	.word	0x080002dd
	{
	    //GIVE_BIT(GPIOA_SPTR->GPIO_MODER.RegisterAccess, 2U* PinNum, (U32)DirectionMode) ; break;
		case GPIOA_PORT :GPIOA_SPTR->GPIO_MODER.RegisterAccess |= (U32)(DirectionMode<<(2U* PinNum)) ; break;
 8000264:	4b27      	ldr	r3, [pc, #156]	; (8000304 <MGPIO_vSetPinMode+0xd8>)
 8000266:	681b      	ldr	r3, [r3, #0]
 8000268:	7979      	ldrb	r1, [r7, #5]
 800026a:	79ba      	ldrb	r2, [r7, #6]
 800026c:	0052      	lsls	r2, r2, #1
 800026e:	fa01 f202 	lsl.w	r2, r1, r2
 8000272:	4611      	mov	r1, r2
 8000274:	4a23      	ldr	r2, [pc, #140]	; (8000304 <MGPIO_vSetPinMode+0xd8>)
 8000276:	430b      	orrs	r3, r1
 8000278:	6013      	str	r3, [r2, #0]
 800027a:	e03c      	b.n	80002f6 <MGPIO_vSetPinMode+0xca>
		case GPIOB_PORT :GPIOB_SPTR->GPIO_MODER.RegisterAccess |= (U32)(DirectionMode<<(2U* PinNum)) ; break;
 800027c:	4b22      	ldr	r3, [pc, #136]	; (8000308 <MGPIO_vSetPinMode+0xdc>)
 800027e:	681b      	ldr	r3, [r3, #0]
 8000280:	7979      	ldrb	r1, [r7, #5]
 8000282:	79ba      	ldrb	r2, [r7, #6]
 8000284:	0052      	lsls	r2, r2, #1
 8000286:	fa01 f202 	lsl.w	r2, r1, r2
 800028a:	4611      	mov	r1, r2
 800028c:	4a1e      	ldr	r2, [pc, #120]	; (8000308 <MGPIO_vSetPinMode+0xdc>)
 800028e:	430b      	orrs	r3, r1
 8000290:	6013      	str	r3, [r2, #0]
 8000292:	e030      	b.n	80002f6 <MGPIO_vSetPinMode+0xca>
		case GPIOC_PORT :GPIOC_SPTR->GPIO_MODER.RegisterAccess |= (U32)(DirectionMode<<(2U* PinNum)) ; break;
 8000294:	4b1d      	ldr	r3, [pc, #116]	; (800030c <MGPIO_vSetPinMode+0xe0>)
 8000296:	681b      	ldr	r3, [r3, #0]
 8000298:	7979      	ldrb	r1, [r7, #5]
 800029a:	79ba      	ldrb	r2, [r7, #6]
 800029c:	0052      	lsls	r2, r2, #1
 800029e:	fa01 f202 	lsl.w	r2, r1, r2
 80002a2:	4611      	mov	r1, r2
 80002a4:	4a19      	ldr	r2, [pc, #100]	; (800030c <MGPIO_vSetPinMode+0xe0>)
 80002a6:	430b      	orrs	r3, r1
 80002a8:	6013      	str	r3, [r2, #0]
 80002aa:	e024      	b.n	80002f6 <MGPIO_vSetPinMode+0xca>
		case GPIOD_PORT :GPIOD_SPTR->GPIO_MODER.RegisterAccess |= (U32)(DirectionMode<<(2U* PinNum)) ; break;
 80002ac:	4b18      	ldr	r3, [pc, #96]	; (8000310 <MGPIO_vSetPinMode+0xe4>)
 80002ae:	681b      	ldr	r3, [r3, #0]
 80002b0:	7979      	ldrb	r1, [r7, #5]
 80002b2:	79ba      	ldrb	r2, [r7, #6]
 80002b4:	0052      	lsls	r2, r2, #1
 80002b6:	fa01 f202 	lsl.w	r2, r1, r2
 80002ba:	4611      	mov	r1, r2
 80002bc:	4a14      	ldr	r2, [pc, #80]	; (8000310 <MGPIO_vSetPinMode+0xe4>)
 80002be:	430b      	orrs	r3, r1
 80002c0:	6013      	str	r3, [r2, #0]
 80002c2:	e018      	b.n	80002f6 <MGPIO_vSetPinMode+0xca>
		case GPIOE_PORT :GPIOE_SPTR->GPIO_MODER.RegisterAccess |= (U32)(DirectionMode<<(2U* PinNum)) ; break;
 80002c4:	4b13      	ldr	r3, [pc, #76]	; (8000314 <MGPIO_vSetPinMode+0xe8>)
 80002c6:	681b      	ldr	r3, [r3, #0]
 80002c8:	7979      	ldrb	r1, [r7, #5]
 80002ca:	79ba      	ldrb	r2, [r7, #6]
 80002cc:	0052      	lsls	r2, r2, #1
 80002ce:	fa01 f202 	lsl.w	r2, r1, r2
 80002d2:	4611      	mov	r1, r2
 80002d4:	4a0f      	ldr	r2, [pc, #60]	; (8000314 <MGPIO_vSetPinMode+0xe8>)
 80002d6:	430b      	orrs	r3, r1
 80002d8:	6013      	str	r3, [r2, #0]
 80002da:	e00c      	b.n	80002f6 <MGPIO_vSetPinMode+0xca>
		case GPIOH_PORT :GPIOH_SPTR->GPIO_MODER.RegisterAccess |= (U32)(DirectionMode<<(2U* PinNum)) ; break;
 80002dc:	4b0e      	ldr	r3, [pc, #56]	; (8000318 <MGPIO_vSetPinMode+0xec>)
 80002de:	681b      	ldr	r3, [r3, #0]
 80002e0:	7979      	ldrb	r1, [r7, #5]
 80002e2:	79ba      	ldrb	r2, [r7, #6]
 80002e4:	0052      	lsls	r2, r2, #1
 80002e6:	fa01 f202 	lsl.w	r2, r1, r2
 80002ea:	4611      	mov	r1, r2
 80002ec:	4a0a      	ldr	r2, [pc, #40]	; (8000318 <MGPIO_vSetPinMode+0xec>)
 80002ee:	430b      	orrs	r3, r1
 80002f0:	6013      	str	r3, [r2, #0]
 80002f2:	e000      	b.n	80002f6 <MGPIO_vSetPinMode+0xca>
		default : /*ERROR*/ break ;
 80002f4:	bf00      	nop
    }
}
 80002f6:	bf00      	nop
 80002f8:	370c      	adds	r7, #12
 80002fa:	46bd      	mov	sp, r7
 80002fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000300:	4770      	bx	lr
 8000302:	bf00      	nop
 8000304:	40020000 	.word	0x40020000
 8000308:	40020400 	.word	0x40020400
 800030c:	40020800 	.word	0x40020800
 8000310:	40020c00 	.word	0x40020c00
 8000314:	40021000 	.word	0x40021000
 8000318:	40021c00 	.word	0x40021c00

0800031c <MGPIO_vSetPinOutputType>:
		default : /*ERROR*/ break ;
    }
}

void MGPIO_vSetPinOutputType(U8 PortName, U8 PinNum, U8 OutPutType)
{
 800031c:	b480      	push	{r7}
 800031e:	b083      	sub	sp, #12
 8000320:	af00      	add	r7, sp, #0
 8000322:	4603      	mov	r3, r0
 8000324:	71fb      	strb	r3, [r7, #7]
 8000326:	460b      	mov	r3, r1
 8000328:	71bb      	strb	r3, [r7, #6]
 800032a:	4613      	mov	r3, r2
 800032c:	717b      	strb	r3, [r7, #5]
	/*OUTPUT_PUSH_PULL_TYPE, OUTPUT_OPEN_DRAIN_TYPE*/
	switch(PortName)
 800032e:	79fb      	ldrb	r3, [r7, #7]
 8000330:	2b05      	cmp	r3, #5
 8000332:	d851      	bhi.n	80003d8 <MGPIO_vSetPinOutputType+0xbc>
 8000334:	a201      	add	r2, pc, #4	; (adr r2, 800033c <MGPIO_vSetPinOutputType+0x20>)
 8000336:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800033a:	bf00      	nop
 800033c:	08000355 	.word	0x08000355
 8000340:	0800036b 	.word	0x0800036b
 8000344:	08000381 	.word	0x08000381
 8000348:	08000397 	.word	0x08000397
 800034c:	080003ad 	.word	0x080003ad
 8000350:	080003c3 	.word	0x080003c3
	{
		case GPIOA_PORT :GPIOA_SPTR->GPIO_OTYPER.RegisterAccess |= (U32)(OutPutType<<(PinNum)) ; break;
 8000354:	4b24      	ldr	r3, [pc, #144]	; (80003e8 <MGPIO_vSetPinOutputType+0xcc>)
 8000356:	685b      	ldr	r3, [r3, #4]
 8000358:	7979      	ldrb	r1, [r7, #5]
 800035a:	79ba      	ldrb	r2, [r7, #6]
 800035c:	fa01 f202 	lsl.w	r2, r1, r2
 8000360:	4611      	mov	r1, r2
 8000362:	4a21      	ldr	r2, [pc, #132]	; (80003e8 <MGPIO_vSetPinOutputType+0xcc>)
 8000364:	430b      	orrs	r3, r1
 8000366:	6053      	str	r3, [r2, #4]
 8000368:	e037      	b.n	80003da <MGPIO_vSetPinOutputType+0xbe>
		case GPIOB_PORT :GPIOB_SPTR->GPIO_OTYPER.RegisterAccess |= (U32)(OutPutType<<(PinNum)) ; break;
 800036a:	4b20      	ldr	r3, [pc, #128]	; (80003ec <MGPIO_vSetPinOutputType+0xd0>)
 800036c:	685b      	ldr	r3, [r3, #4]
 800036e:	7979      	ldrb	r1, [r7, #5]
 8000370:	79ba      	ldrb	r2, [r7, #6]
 8000372:	fa01 f202 	lsl.w	r2, r1, r2
 8000376:	4611      	mov	r1, r2
 8000378:	4a1c      	ldr	r2, [pc, #112]	; (80003ec <MGPIO_vSetPinOutputType+0xd0>)
 800037a:	430b      	orrs	r3, r1
 800037c:	6053      	str	r3, [r2, #4]
 800037e:	e02c      	b.n	80003da <MGPIO_vSetPinOutputType+0xbe>
		case GPIOC_PORT :GPIOC_SPTR->GPIO_OTYPER.RegisterAccess |= (U32)(OutPutType<<(PinNum)) ; break;
 8000380:	4b1b      	ldr	r3, [pc, #108]	; (80003f0 <MGPIO_vSetPinOutputType+0xd4>)
 8000382:	685b      	ldr	r3, [r3, #4]
 8000384:	7979      	ldrb	r1, [r7, #5]
 8000386:	79ba      	ldrb	r2, [r7, #6]
 8000388:	fa01 f202 	lsl.w	r2, r1, r2
 800038c:	4611      	mov	r1, r2
 800038e:	4a18      	ldr	r2, [pc, #96]	; (80003f0 <MGPIO_vSetPinOutputType+0xd4>)
 8000390:	430b      	orrs	r3, r1
 8000392:	6053      	str	r3, [r2, #4]
 8000394:	e021      	b.n	80003da <MGPIO_vSetPinOutputType+0xbe>
		case GPIOD_PORT :GPIOD_SPTR->GPIO_OTYPER.RegisterAccess |= (U32)(OutPutType<<(PinNum)) ; break;
 8000396:	4b17      	ldr	r3, [pc, #92]	; (80003f4 <MGPIO_vSetPinOutputType+0xd8>)
 8000398:	685b      	ldr	r3, [r3, #4]
 800039a:	7979      	ldrb	r1, [r7, #5]
 800039c:	79ba      	ldrb	r2, [r7, #6]
 800039e:	fa01 f202 	lsl.w	r2, r1, r2
 80003a2:	4611      	mov	r1, r2
 80003a4:	4a13      	ldr	r2, [pc, #76]	; (80003f4 <MGPIO_vSetPinOutputType+0xd8>)
 80003a6:	430b      	orrs	r3, r1
 80003a8:	6053      	str	r3, [r2, #4]
 80003aa:	e016      	b.n	80003da <MGPIO_vSetPinOutputType+0xbe>
		case GPIOE_PORT :GPIOE_SPTR->GPIO_OTYPER.RegisterAccess |= (U32)(OutPutType<<(PinNum)) ; break;
 80003ac:	4b12      	ldr	r3, [pc, #72]	; (80003f8 <MGPIO_vSetPinOutputType+0xdc>)
 80003ae:	685b      	ldr	r3, [r3, #4]
 80003b0:	7979      	ldrb	r1, [r7, #5]
 80003b2:	79ba      	ldrb	r2, [r7, #6]
 80003b4:	fa01 f202 	lsl.w	r2, r1, r2
 80003b8:	4611      	mov	r1, r2
 80003ba:	4a0f      	ldr	r2, [pc, #60]	; (80003f8 <MGPIO_vSetPinOutputType+0xdc>)
 80003bc:	430b      	orrs	r3, r1
 80003be:	6053      	str	r3, [r2, #4]
 80003c0:	e00b      	b.n	80003da <MGPIO_vSetPinOutputType+0xbe>
		case GPIOH_PORT :GPIOH_SPTR->GPIO_OTYPER.RegisterAccess |= (U32)(OutPutType<<(PinNum)) ; break;
 80003c2:	4b0e      	ldr	r3, [pc, #56]	; (80003fc <MGPIO_vSetPinOutputType+0xe0>)
 80003c4:	685b      	ldr	r3, [r3, #4]
 80003c6:	7979      	ldrb	r1, [r7, #5]
 80003c8:	79ba      	ldrb	r2, [r7, #6]
 80003ca:	fa01 f202 	lsl.w	r2, r1, r2
 80003ce:	4611      	mov	r1, r2
 80003d0:	4a0a      	ldr	r2, [pc, #40]	; (80003fc <MGPIO_vSetPinOutputType+0xe0>)
 80003d2:	430b      	orrs	r3, r1
 80003d4:	6053      	str	r3, [r2, #4]
 80003d6:	e000      	b.n	80003da <MGPIO_vSetPinOutputType+0xbe>
		default : /*ERROR*/ break ;
 80003d8:	bf00      	nop
     }
}
 80003da:	bf00      	nop
 80003dc:	370c      	adds	r7, #12
 80003de:	46bd      	mov	sp, r7
 80003e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003e4:	4770      	bx	lr
 80003e6:	bf00      	nop
 80003e8:	40020000 	.word	0x40020000
 80003ec:	40020400 	.word	0x40020400
 80003f0:	40020800 	.word	0x40020800
 80003f4:	40020c00 	.word	0x40020c00
 80003f8:	40021000 	.word	0x40021000
 80003fc:	40021c00 	.word	0x40021c00

08000400 <MGPIO_vSetPinOutputSpeed>:

void MGPIO_vSetPinOutputSpeed(U8 PortName, U8 PinNum, U8 OutputSpeed)
{
 8000400:	b480      	push	{r7}
 8000402:	b083      	sub	sp, #12
 8000404:	af00      	add	r7, sp, #0
 8000406:	4603      	mov	r3, r0
 8000408:	71fb      	strb	r3, [r7, #7]
 800040a:	460b      	mov	r3, r1
 800040c:	71bb      	strb	r3, [r7, #6]
 800040e:	4613      	mov	r3, r2
 8000410:	717b      	strb	r3, [r7, #5]
	/*OUTPUT_LOW_SPEED, OUTPUT_MEDUIM_SPEED, OUTPUT_HIGH_SPEED, OUTPUT_VERY_HIGH_SPEED*/
	switch(PortName)
 8000412:	79fb      	ldrb	r3, [r7, #7]
 8000414:	2b05      	cmp	r3, #5
 8000416:	d857      	bhi.n	80004c8 <MGPIO_vSetPinOutputSpeed+0xc8>
 8000418:	a201      	add	r2, pc, #4	; (adr r2, 8000420 <MGPIO_vSetPinOutputSpeed+0x20>)
 800041a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800041e:	bf00      	nop
 8000420:	08000439 	.word	0x08000439
 8000424:	08000451 	.word	0x08000451
 8000428:	08000469 	.word	0x08000469
 800042c:	08000481 	.word	0x08000481
 8000430:	08000499 	.word	0x08000499
 8000434:	080004b1 	.word	0x080004b1
	{
		case GPIOA_PORT :GPIOA_SPTR->GPIO_OSPEEDR.RegisterAccess |= (U32)(OutputSpeed<<(2U* PinNum)) ; break;
 8000438:	4b27      	ldr	r3, [pc, #156]	; (80004d8 <MGPIO_vSetPinOutputSpeed+0xd8>)
 800043a:	689b      	ldr	r3, [r3, #8]
 800043c:	7979      	ldrb	r1, [r7, #5]
 800043e:	79ba      	ldrb	r2, [r7, #6]
 8000440:	0052      	lsls	r2, r2, #1
 8000442:	fa01 f202 	lsl.w	r2, r1, r2
 8000446:	4611      	mov	r1, r2
 8000448:	4a23      	ldr	r2, [pc, #140]	; (80004d8 <MGPIO_vSetPinOutputSpeed+0xd8>)
 800044a:	430b      	orrs	r3, r1
 800044c:	6093      	str	r3, [r2, #8]
 800044e:	e03c      	b.n	80004ca <MGPIO_vSetPinOutputSpeed+0xca>
		case GPIOB_PORT :GPIOB_SPTR->GPIO_OSPEEDR.RegisterAccess |= (U32)(OutputSpeed<<(2U* PinNum)) ; break;
 8000450:	4b22      	ldr	r3, [pc, #136]	; (80004dc <MGPIO_vSetPinOutputSpeed+0xdc>)
 8000452:	689b      	ldr	r3, [r3, #8]
 8000454:	7979      	ldrb	r1, [r7, #5]
 8000456:	79ba      	ldrb	r2, [r7, #6]
 8000458:	0052      	lsls	r2, r2, #1
 800045a:	fa01 f202 	lsl.w	r2, r1, r2
 800045e:	4611      	mov	r1, r2
 8000460:	4a1e      	ldr	r2, [pc, #120]	; (80004dc <MGPIO_vSetPinOutputSpeed+0xdc>)
 8000462:	430b      	orrs	r3, r1
 8000464:	6093      	str	r3, [r2, #8]
 8000466:	e030      	b.n	80004ca <MGPIO_vSetPinOutputSpeed+0xca>
		case GPIOC_PORT :GPIOC_SPTR->GPIO_OSPEEDR.RegisterAccess |= (U32)(OutputSpeed<<(2U* PinNum)) ; break;
 8000468:	4b1d      	ldr	r3, [pc, #116]	; (80004e0 <MGPIO_vSetPinOutputSpeed+0xe0>)
 800046a:	689b      	ldr	r3, [r3, #8]
 800046c:	7979      	ldrb	r1, [r7, #5]
 800046e:	79ba      	ldrb	r2, [r7, #6]
 8000470:	0052      	lsls	r2, r2, #1
 8000472:	fa01 f202 	lsl.w	r2, r1, r2
 8000476:	4611      	mov	r1, r2
 8000478:	4a19      	ldr	r2, [pc, #100]	; (80004e0 <MGPIO_vSetPinOutputSpeed+0xe0>)
 800047a:	430b      	orrs	r3, r1
 800047c:	6093      	str	r3, [r2, #8]
 800047e:	e024      	b.n	80004ca <MGPIO_vSetPinOutputSpeed+0xca>
		case GPIOD_PORT :GPIOD_SPTR->GPIO_OSPEEDR.RegisterAccess |= (U32)(OutputSpeed<<(2U* PinNum)) ; break;
 8000480:	4b18      	ldr	r3, [pc, #96]	; (80004e4 <MGPIO_vSetPinOutputSpeed+0xe4>)
 8000482:	689b      	ldr	r3, [r3, #8]
 8000484:	7979      	ldrb	r1, [r7, #5]
 8000486:	79ba      	ldrb	r2, [r7, #6]
 8000488:	0052      	lsls	r2, r2, #1
 800048a:	fa01 f202 	lsl.w	r2, r1, r2
 800048e:	4611      	mov	r1, r2
 8000490:	4a14      	ldr	r2, [pc, #80]	; (80004e4 <MGPIO_vSetPinOutputSpeed+0xe4>)
 8000492:	430b      	orrs	r3, r1
 8000494:	6093      	str	r3, [r2, #8]
 8000496:	e018      	b.n	80004ca <MGPIO_vSetPinOutputSpeed+0xca>
		case GPIOE_PORT :GPIOE_SPTR->GPIO_OSPEEDR.RegisterAccess |= (U32)(OutputSpeed<<(2U* PinNum)) ; break;
 8000498:	4b13      	ldr	r3, [pc, #76]	; (80004e8 <MGPIO_vSetPinOutputSpeed+0xe8>)
 800049a:	689b      	ldr	r3, [r3, #8]
 800049c:	7979      	ldrb	r1, [r7, #5]
 800049e:	79ba      	ldrb	r2, [r7, #6]
 80004a0:	0052      	lsls	r2, r2, #1
 80004a2:	fa01 f202 	lsl.w	r2, r1, r2
 80004a6:	4611      	mov	r1, r2
 80004a8:	4a0f      	ldr	r2, [pc, #60]	; (80004e8 <MGPIO_vSetPinOutputSpeed+0xe8>)
 80004aa:	430b      	orrs	r3, r1
 80004ac:	6093      	str	r3, [r2, #8]
 80004ae:	e00c      	b.n	80004ca <MGPIO_vSetPinOutputSpeed+0xca>
		case GPIOH_PORT :GPIOH_SPTR->GPIO_OSPEEDR.RegisterAccess |= (U32)(OutputSpeed<<(2U* PinNum)) ; break;
 80004b0:	4b0e      	ldr	r3, [pc, #56]	; (80004ec <MGPIO_vSetPinOutputSpeed+0xec>)
 80004b2:	689b      	ldr	r3, [r3, #8]
 80004b4:	7979      	ldrb	r1, [r7, #5]
 80004b6:	79ba      	ldrb	r2, [r7, #6]
 80004b8:	0052      	lsls	r2, r2, #1
 80004ba:	fa01 f202 	lsl.w	r2, r1, r2
 80004be:	4611      	mov	r1, r2
 80004c0:	4a0a      	ldr	r2, [pc, #40]	; (80004ec <MGPIO_vSetPinOutputSpeed+0xec>)
 80004c2:	430b      	orrs	r3, r1
 80004c4:	6093      	str	r3, [r2, #8]
 80004c6:	e000      	b.n	80004ca <MGPIO_vSetPinOutputSpeed+0xca>
		default : /*ERROR*/ break ;
 80004c8:	bf00      	nop
	}
}
 80004ca:	bf00      	nop
 80004cc:	370c      	adds	r7, #12
 80004ce:	46bd      	mov	sp, r7
 80004d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004d4:	4770      	bx	lr
 80004d6:	bf00      	nop
 80004d8:	40020000 	.word	0x40020000
 80004dc:	40020400 	.word	0x40020400
 80004e0:	40020800 	.word	0x40020800
 80004e4:	40020c00 	.word	0x40020c00
 80004e8:	40021000 	.word	0x40021000
 80004ec:	40021c00 	.word	0x40021c00

080004f0 <MGPIO_vWritePinData>:
	}
	return L_U8Pin_Read_Data;
}

void MGPIO_vWritePinData(U8 PortName, U8 PinNum, U8 OutputState)
{
 80004f0:	b480      	push	{r7}
 80004f2:	b083      	sub	sp, #12
 80004f4:	af00      	add	r7, sp, #0
 80004f6:	4603      	mov	r3, r0
 80004f8:	71fb      	strb	r3, [r7, #7]
 80004fa:	460b      	mov	r3, r1
 80004fc:	71bb      	strb	r3, [r7, #6]
 80004fe:	4613      	mov	r3, r2
 8000500:	717b      	strb	r3, [r7, #5]
	/*LOW_STATE, HIGH_STATE*/
	switch(PortName)
 8000502:	79fb      	ldrb	r3, [r7, #7]
 8000504:	2b05      	cmp	r3, #5
 8000506:	d851      	bhi.n	80005ac <MGPIO_vWritePinData+0xbc>
 8000508:	a201      	add	r2, pc, #4	; (adr r2, 8000510 <MGPIO_vWritePinData+0x20>)
 800050a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800050e:	bf00      	nop
 8000510:	08000529 	.word	0x08000529
 8000514:	0800053f 	.word	0x0800053f
 8000518:	08000555 	.word	0x08000555
 800051c:	0800056b 	.word	0x0800056b
 8000520:	08000581 	.word	0x08000581
 8000524:	08000597 	.word	0x08000597
	{
	    case GPIOA_PORT :GPIOA_SPTR->GPIO_ODR.RegisterAccess |= (U32)(OutputState<<(PinNum)) ; break;
 8000528:	4b24      	ldr	r3, [pc, #144]	; (80005bc <MGPIO_vWritePinData+0xcc>)
 800052a:	695b      	ldr	r3, [r3, #20]
 800052c:	7979      	ldrb	r1, [r7, #5]
 800052e:	79ba      	ldrb	r2, [r7, #6]
 8000530:	fa01 f202 	lsl.w	r2, r1, r2
 8000534:	4611      	mov	r1, r2
 8000536:	4a21      	ldr	r2, [pc, #132]	; (80005bc <MGPIO_vWritePinData+0xcc>)
 8000538:	430b      	orrs	r3, r1
 800053a:	6153      	str	r3, [r2, #20]
 800053c:	e037      	b.n	80005ae <MGPIO_vWritePinData+0xbe>
	    case GPIOB_PORT :GPIOB_SPTR->GPIO_ODR.RegisterAccess |= (U32)(OutputState<<(PinNum)) ; break;
 800053e:	4b20      	ldr	r3, [pc, #128]	; (80005c0 <MGPIO_vWritePinData+0xd0>)
 8000540:	695b      	ldr	r3, [r3, #20]
 8000542:	7979      	ldrb	r1, [r7, #5]
 8000544:	79ba      	ldrb	r2, [r7, #6]
 8000546:	fa01 f202 	lsl.w	r2, r1, r2
 800054a:	4611      	mov	r1, r2
 800054c:	4a1c      	ldr	r2, [pc, #112]	; (80005c0 <MGPIO_vWritePinData+0xd0>)
 800054e:	430b      	orrs	r3, r1
 8000550:	6153      	str	r3, [r2, #20]
 8000552:	e02c      	b.n	80005ae <MGPIO_vWritePinData+0xbe>
	    case GPIOC_PORT :GPIOC_SPTR->GPIO_ODR.RegisterAccess |= (U32)(OutputState<<(PinNum)) ; break;
 8000554:	4b1b      	ldr	r3, [pc, #108]	; (80005c4 <MGPIO_vWritePinData+0xd4>)
 8000556:	695b      	ldr	r3, [r3, #20]
 8000558:	7979      	ldrb	r1, [r7, #5]
 800055a:	79ba      	ldrb	r2, [r7, #6]
 800055c:	fa01 f202 	lsl.w	r2, r1, r2
 8000560:	4611      	mov	r1, r2
 8000562:	4a18      	ldr	r2, [pc, #96]	; (80005c4 <MGPIO_vWritePinData+0xd4>)
 8000564:	430b      	orrs	r3, r1
 8000566:	6153      	str	r3, [r2, #20]
 8000568:	e021      	b.n	80005ae <MGPIO_vWritePinData+0xbe>
	    case GPIOD_PORT :GPIOD_SPTR->GPIO_ODR.RegisterAccess |= (U32)(OutputState<<(PinNum)) ; break;
 800056a:	4b17      	ldr	r3, [pc, #92]	; (80005c8 <MGPIO_vWritePinData+0xd8>)
 800056c:	695b      	ldr	r3, [r3, #20]
 800056e:	7979      	ldrb	r1, [r7, #5]
 8000570:	79ba      	ldrb	r2, [r7, #6]
 8000572:	fa01 f202 	lsl.w	r2, r1, r2
 8000576:	4611      	mov	r1, r2
 8000578:	4a13      	ldr	r2, [pc, #76]	; (80005c8 <MGPIO_vWritePinData+0xd8>)
 800057a:	430b      	orrs	r3, r1
 800057c:	6153      	str	r3, [r2, #20]
 800057e:	e016      	b.n	80005ae <MGPIO_vWritePinData+0xbe>
	    case GPIOE_PORT :GPIOE_SPTR->GPIO_ODR.RegisterAccess |= (U32)(OutputState<<(PinNum)) ; break;
 8000580:	4b12      	ldr	r3, [pc, #72]	; (80005cc <MGPIO_vWritePinData+0xdc>)
 8000582:	695b      	ldr	r3, [r3, #20]
 8000584:	7979      	ldrb	r1, [r7, #5]
 8000586:	79ba      	ldrb	r2, [r7, #6]
 8000588:	fa01 f202 	lsl.w	r2, r1, r2
 800058c:	4611      	mov	r1, r2
 800058e:	4a0f      	ldr	r2, [pc, #60]	; (80005cc <MGPIO_vWritePinData+0xdc>)
 8000590:	430b      	orrs	r3, r1
 8000592:	6153      	str	r3, [r2, #20]
 8000594:	e00b      	b.n	80005ae <MGPIO_vWritePinData+0xbe>
	    case GPIOH_PORT :GPIOH_SPTR->GPIO_ODR.RegisterAccess |= (U32)(OutputState<<(PinNum)) ; break;
 8000596:	4b0e      	ldr	r3, [pc, #56]	; (80005d0 <MGPIO_vWritePinData+0xe0>)
 8000598:	695b      	ldr	r3, [r3, #20]
 800059a:	7979      	ldrb	r1, [r7, #5]
 800059c:	79ba      	ldrb	r2, [r7, #6]
 800059e:	fa01 f202 	lsl.w	r2, r1, r2
 80005a2:	4611      	mov	r1, r2
 80005a4:	4a0a      	ldr	r2, [pc, #40]	; (80005d0 <MGPIO_vWritePinData+0xe0>)
 80005a6:	430b      	orrs	r3, r1
 80005a8:	6153      	str	r3, [r2, #20]
 80005aa:	e000      	b.n	80005ae <MGPIO_vWritePinData+0xbe>
		default : /*ERROR*/ break ;
 80005ac:	bf00      	nop
	}
}
 80005ae:	bf00      	nop
 80005b0:	370c      	adds	r7, #12
 80005b2:	46bd      	mov	sp, r7
 80005b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005b8:	4770      	bx	lr
 80005ba:	bf00      	nop
 80005bc:	40020000 	.word	0x40020000
 80005c0:	40020400 	.word	0x40020400
 80005c4:	40020800 	.word	0x40020800
 80005c8:	40020c00 	.word	0x40020c00
 80005cc:	40021000 	.word	0x40021000
 80005d0:	40021c00 	.word	0x40021c00

080005d4 <MRCC_vInitSystemClock>:


#include "MCAL_RCC_Interface.h"

void MRCC_vInitSystemClock(void)
{
 80005d4:	b480      	push	{r7}
 80005d6:	af00      	add	r7, sp, #0
	CLR_BIT(RCC_SPTR->REG_RCC_CR.RegisterAccess, CR_HSION);
 80005d8:	4b14      	ldr	r3, [pc, #80]	; (800062c <MRCC_vInitSystemClock+0x58>)
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	4a13      	ldr	r2, [pc, #76]	; (800062c <MRCC_vInitSystemClock+0x58>)
 80005de:	f023 0301 	bic.w	r3, r3, #1
 80005e2:	6013      	str	r3, [r2, #0]
    CLR_BIT(RCC_SPTR->REG_RCC_CR.RegisterAccess, CR_HSEON);
 80005e4:	4b11      	ldr	r3, [pc, #68]	; (800062c <MRCC_vInitSystemClock+0x58>)
 80005e6:	681b      	ldr	r3, [r3, #0]
 80005e8:	4a10      	ldr	r2, [pc, #64]	; (800062c <MRCC_vInitSystemClock+0x58>)
 80005ea:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80005ee:	6013      	str	r3, [r2, #0]
    CLR_BIT(RCC_SPTR->REG_RCC_CR.RegisterAccess, CR_PLLON);
 80005f0:	4b0e      	ldr	r3, [pc, #56]	; (800062c <MRCC_vInitSystemClock+0x58>)
 80005f2:	681b      	ldr	r3, [r3, #0]
 80005f4:	4a0d      	ldr	r2, [pc, #52]	; (800062c <MRCC_vInitSystemClock+0x58>)
 80005f6:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80005fa:	6013      	str	r3, [r2, #0]
	#if CLOCK_SOURCE == HSI		/** HSI oscillator selected as system clock**********/
		/* 1- CLK SYS --> HSI */
		CLR_BIT(RCC_SPTR->REG_RCC_CFGR.RegisterAccess, CFGR_SW0);
 80005fc:	4b0b      	ldr	r3, [pc, #44]	; (800062c <MRCC_vInitSystemClock+0x58>)
 80005fe:	689b      	ldr	r3, [r3, #8]
 8000600:	4a0a      	ldr	r2, [pc, #40]	; (800062c <MRCC_vInitSystemClock+0x58>)
 8000602:	f023 0301 	bic.w	r3, r3, #1
 8000606:	6093      	str	r3, [r2, #8]
		CLR_BIT(RCC_SPTR->REG_RCC_CFGR.RegisterAccess, CFGR_SW1);
 8000608:	4b08      	ldr	r3, [pc, #32]	; (800062c <MRCC_vInitSystemClock+0x58>)
 800060a:	689b      	ldr	r3, [r3, #8]
 800060c:	4a07      	ldr	r2, [pc, #28]	; (800062c <MRCC_vInitSystemClock+0x58>)
 800060e:	f023 0302 	bic.w	r3, r3, #2
 8000612:	6093      	str	r3, [r2, #8]
		/* 2- EN HSI*/
		SET_BIT(RCC_SPTR->REG_RCC_CR.RegisterAccess, CR_HSION);
 8000614:	4b05      	ldr	r3, [pc, #20]	; (800062c <MRCC_vInitSystemClock+0x58>)
 8000616:	681b      	ldr	r3, [r3, #0]
 8000618:	4a04      	ldr	r2, [pc, #16]	; (800062c <MRCC_vInitSystemClock+0x58>)
 800061a:	f043 0301 	orr.w	r3, r3, #1
 800061e:	6013      	str	r3, [r2, #0]
			/* Error*/
		#endif
	#else
		/* Error*/
	#endif
}
 8000620:	bf00      	nop
 8000622:	46bd      	mov	sp, r7
 8000624:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000628:	4770      	bx	lr
 800062a:	bf00      	nop
 800062c:	40023800 	.word	0x40023800

08000630 <MRCC_vEnableBusClock>:

void MRCC_vEnableBusClock(U8 AxBxENR_RCC_Bus ,U8 Peripheral_PPxx)
{
 8000630:	b480      	push	{r7}
 8000632:	b083      	sub	sp, #12
 8000634:	af00      	add	r7, sp, #0
 8000636:	4603      	mov	r3, r0
 8000638:	460a      	mov	r2, r1
 800063a:	71fb      	strb	r3, [r7, #7]
 800063c:	4613      	mov	r3, r2
 800063e:	71bb      	strb	r3, [r7, #6]
	switch(AxBxENR_RCC_Bus)
 8000640:	79fb      	ldrb	r3, [r7, #7]
 8000642:	2b03      	cmp	r3, #3
 8000644:	d836      	bhi.n	80006b4 <MRCC_vEnableBusClock+0x84>
 8000646:	a201      	add	r2, pc, #4	; (adr r2, 800064c <MRCC_vEnableBusClock+0x1c>)
 8000648:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800064c:	0800065d 	.word	0x0800065d
 8000650:	08000673 	.word	0x08000673
 8000654:	08000689 	.word	0x08000689
 8000658:	0800069f 	.word	0x0800069f
	{
		case Bus_AHB1:
			SET_BIT(RCC_SPTR->REG_RCC_AHB1ENR.RegisterAccess, Peripheral_PPxx);  break ;
 800065c:	4b19      	ldr	r3, [pc, #100]	; (80006c4 <MRCC_vEnableBusClock+0x94>)
 800065e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000660:	79ba      	ldrb	r2, [r7, #6]
 8000662:	2101      	movs	r1, #1
 8000664:	fa01 f202 	lsl.w	r2, r1, r2
 8000668:	4611      	mov	r1, r2
 800066a:	4a16      	ldr	r2, [pc, #88]	; (80006c4 <MRCC_vEnableBusClock+0x94>)
 800066c:	430b      	orrs	r3, r1
 800066e:	6313      	str	r3, [r2, #48]	; 0x30
 8000670:	e021      	b.n	80006b6 <MRCC_vEnableBusClock+0x86>
		case Bus_AHB2:
			SET_BIT(RCC_SPTR->REG_RCC_AHB2ENR.RegisterAccess, Peripheral_PPxx);  break ;
 8000672:	4b14      	ldr	r3, [pc, #80]	; (80006c4 <MRCC_vEnableBusClock+0x94>)
 8000674:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000676:	79ba      	ldrb	r2, [r7, #6]
 8000678:	2101      	movs	r1, #1
 800067a:	fa01 f202 	lsl.w	r2, r1, r2
 800067e:	4611      	mov	r1, r2
 8000680:	4a10      	ldr	r2, [pc, #64]	; (80006c4 <MRCC_vEnableBusClock+0x94>)
 8000682:	430b      	orrs	r3, r1
 8000684:	6353      	str	r3, [r2, #52]	; 0x34
 8000686:	e016      	b.n	80006b6 <MRCC_vEnableBusClock+0x86>
		case Bus_APB1:
			SET_BIT(RCC_SPTR->REG_RCC_APB1ENR.RegisterAccess, Peripheral_PPxx);  break ;
 8000688:	4b0e      	ldr	r3, [pc, #56]	; (80006c4 <MRCC_vEnableBusClock+0x94>)
 800068a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800068c:	79ba      	ldrb	r2, [r7, #6]
 800068e:	2101      	movs	r1, #1
 8000690:	fa01 f202 	lsl.w	r2, r1, r2
 8000694:	4611      	mov	r1, r2
 8000696:	4a0b      	ldr	r2, [pc, #44]	; (80006c4 <MRCC_vEnableBusClock+0x94>)
 8000698:	430b      	orrs	r3, r1
 800069a:	6413      	str	r3, [r2, #64]	; 0x40
 800069c:	e00b      	b.n	80006b6 <MRCC_vEnableBusClock+0x86>
		case Bus_APB2:
			SET_BIT(RCC_SPTR->REG_RCC_APB2ENR.RegisterAccess, Peripheral_PPxx);  break ;
 800069e:	4b09      	ldr	r3, [pc, #36]	; (80006c4 <MRCC_vEnableBusClock+0x94>)
 80006a0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80006a2:	79ba      	ldrb	r2, [r7, #6]
 80006a4:	2101      	movs	r1, #1
 80006a6:	fa01 f202 	lsl.w	r2, r1, r2
 80006aa:	4611      	mov	r1, r2
 80006ac:	4a05      	ldr	r2, [pc, #20]	; (80006c4 <MRCC_vEnableBusClock+0x94>)
 80006ae:	430b      	orrs	r3, r1
 80006b0:	6453      	str	r3, [r2, #68]	; 0x44
 80006b2:	e000      	b.n	80006b6 <MRCC_vEnableBusClock+0x86>
		default :        /************ERROR*/             				break ;
 80006b4:	bf00      	nop
	}
}
 80006b6:	bf00      	nop
 80006b8:	370c      	adds	r7, #12
 80006ba:	46bd      	mov	sp, r7
 80006bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006c0:	4770      	bx	lr
 80006c2:	bf00      	nop
 80006c4:	40023800 	.word	0x40023800

080006c8 <main>:
 */

#include "main.h"

int main(void)
{
 80006c8:	b580      	push	{r7, lr}
 80006ca:	af00      	add	r7, sp, #0
	/**************************************************************************
	 * ****************************_Debug_Section_*****************************
	 * >>>>>> ADebug_All_GPIO_Ports();
	 * >>>>>>
	 **************************************************************************/
		MRCC_vInitSystemClock(); //System Clock Start -->>>>>>>>>>>>>>>>>>>>>>>
 80006cc:	f7ff ff82 	bl	80005d4 <MRCC_vInitSystemClock>
	HLED_vInitLED(LED_1_);
	HLED_vLEDStateControl(LED_1_, LED_OFF);
	Delay_vMilliSecond16MHzoscillator(5000);
	HLED_vLEDStateControl(LED_1_, LED_ON);
	Delay_vMilliSecond16MHzoscillator(5000);*/
		MRCC_vEnableBusClock(Bus_AHB1, PHB1_GPIOA);
 80006d0:	2100      	movs	r1, #0
 80006d2:	2000      	movs	r0, #0
 80006d4:	f7ff ffac 	bl	8000630 <MRCC_vEnableBusClock>
		MGPIO_vSetPinMode(GPIOA_PORT, GPIO_PIN_0, OUTPUT_MODE);
 80006d8:	2201      	movs	r2, #1
 80006da:	2100      	movs	r1, #0
 80006dc:	2000      	movs	r0, #0
 80006de:	f7ff fda5 	bl	800022c <MGPIO_vSetPinMode>
		MGPIO_vSetPinOutputType(GPIOA_PORT, GPIO_PIN_0, OUTPUT_PUSH_PULL_TYPE);
 80006e2:	2200      	movs	r2, #0
 80006e4:	2100      	movs	r1, #0
 80006e6:	2000      	movs	r0, #0
 80006e8:	f7ff fe18 	bl	800031c <MGPIO_vSetPinOutputType>
		MGPIO_vSetPinOutputSpeed(GPIOA_PORT, GPIO_PIN_0, OUTPUT_LOW_SPEED);
 80006ec:	2200      	movs	r2, #0
 80006ee:	2100      	movs	r1, #0
 80006f0:	2000      	movs	r0, #0
 80006f2:	f7ff fe85 	bl	8000400 <MGPIO_vSetPinOutputSpeed>
		MRCC_vEnableBusClock(Bus_AHB1, PHB1_GPIOA);
 80006f6:	2100      	movs	r1, #0
 80006f8:	2000      	movs	r0, #0
 80006fa:	f7ff ff99 	bl	8000630 <MRCC_vEnableBusClock>
		MGPIO_vSetPinMode(GPIOA_PORT, GPIO_PIN_1, OUTPUT_MODE);
 80006fe:	2201      	movs	r2, #1
 8000700:	2101      	movs	r1, #1
 8000702:	2000      	movs	r0, #0
 8000704:	f7ff fd92 	bl	800022c <MGPIO_vSetPinMode>
		MGPIO_vSetPinOutputType(GPIOA_PORT, GPIO_PIN_1, OUTPUT_PUSH_PULL_TYPE);
 8000708:	2200      	movs	r2, #0
 800070a:	2101      	movs	r1, #1
 800070c:	2000      	movs	r0, #0
 800070e:	f7ff fe05 	bl	800031c <MGPIO_vSetPinOutputType>
		MGPIO_vSetPinOutputSpeed(GPIOA_PORT, GPIO_PIN_1, OUTPUT_LOW_SPEED);
 8000712:	2200      	movs	r2, #0
 8000714:	2101      	movs	r1, #1
 8000716:	2000      	movs	r0, #0
 8000718:	f7ff fe72 	bl	8000400 <MGPIO_vSetPinOutputSpeed>
		MRCC_vEnableBusClock(Bus_AHB1, PHB1_GPIOA);
 800071c:	2100      	movs	r1, #0
 800071e:	2000      	movs	r0, #0
 8000720:	f7ff ff86 	bl	8000630 <MRCC_vEnableBusClock>
		MGPIO_vSetPinMode(GPIOA_PORT, GPIO_PIN_2, OUTPUT_MODE);
 8000724:	2201      	movs	r2, #1
 8000726:	2102      	movs	r1, #2
 8000728:	2000      	movs	r0, #0
 800072a:	f7ff fd7f 	bl	800022c <MGPIO_vSetPinMode>
		MGPIO_vSetPinOutputType(GPIOA_PORT, GPIO_PIN_2, OUTPUT_PUSH_PULL_TYPE);
 800072e:	2200      	movs	r2, #0
 8000730:	2102      	movs	r1, #2
 8000732:	2000      	movs	r0, #0
 8000734:	f7ff fdf2 	bl	800031c <MGPIO_vSetPinOutputType>
		MGPIO_vSetPinOutputSpeed(GPIOA_PORT, GPIO_PIN_2, OUTPUT_LOW_SPEED);
 8000738:	2200      	movs	r2, #0
 800073a:	2102      	movs	r1, #2
 800073c:	2000      	movs	r0, #0
 800073e:	f7ff fe5f 	bl	8000400 <MGPIO_vSetPinOutputSpeed>

	while(1)
	{
		MGPIO_vWritePinData(GPIOA_PORT, GPIO_PIN_0, HIGH_STATE);
 8000742:	2201      	movs	r2, #1
 8000744:	2100      	movs	r1, #0
 8000746:	2000      	movs	r0, #0
 8000748:	f7ff fed2 	bl	80004f0 <MGPIO_vWritePinData>
		Delay_vMilliSecond16MHzoscillator(1000);
 800074c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000750:	f7ff fd40 	bl	80001d4 <Delay_vMilliSecond16MHzoscillator>
		MGPIO_vWritePinData(GPIOA_PORT, GPIO_PIN_1, HIGH_STATE);
 8000754:	2201      	movs	r2, #1
 8000756:	2101      	movs	r1, #1
 8000758:	2000      	movs	r0, #0
 800075a:	f7ff fec9 	bl	80004f0 <MGPIO_vWritePinData>
		Delay_vMilliSecond16MHzoscillator(1000);
 800075e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000762:	f7ff fd37 	bl	80001d4 <Delay_vMilliSecond16MHzoscillator>
		MGPIO_vWritePinData(GPIOA_PORT, GPIO_PIN_2, HIGH_STATE);
 8000766:	2201      	movs	r2, #1
 8000768:	2102      	movs	r1, #2
 800076a:	2000      	movs	r0, #0
 800076c:	f7ff fec0 	bl	80004f0 <MGPIO_vWritePinData>
		Delay_vMilliSecond16MHzoscillator(1000);
 8000770:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000774:	f7ff fd2e 	bl	80001d4 <Delay_vMilliSecond16MHzoscillator>
		MGPIO_vWritePinData(GPIOA_PORT, GPIO_PIN_0, LOW_STATE);
 8000778:	2200      	movs	r2, #0
 800077a:	2100      	movs	r1, #0
 800077c:	2000      	movs	r0, #0
 800077e:	f7ff feb7 	bl	80004f0 <MGPIO_vWritePinData>
		Delay_vMilliSecond16MHzoscillator(1000);
 8000782:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000786:	f7ff fd25 	bl	80001d4 <Delay_vMilliSecond16MHzoscillator>
		MGPIO_vWritePinData(GPIOA_PORT, GPIO_PIN_1, LOW_STATE);
 800078a:	2200      	movs	r2, #0
 800078c:	2101      	movs	r1, #1
 800078e:	2000      	movs	r0, #0
 8000790:	f7ff feae 	bl	80004f0 <MGPIO_vWritePinData>
		Delay_vMilliSecond16MHzoscillator(1000);
 8000794:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000798:	f7ff fd1c 	bl	80001d4 <Delay_vMilliSecond16MHzoscillator>
		MGPIO_vWritePinData(GPIOA_PORT, GPIO_PIN_2, LOW_STATE);
 800079c:	2200      	movs	r2, #0
 800079e:	2102      	movs	r1, #2
 80007a0:	2000      	movs	r0, #0
 80007a2:	f7ff fea5 	bl	80004f0 <MGPIO_vWritePinData>
		Delay_vMilliSecond16MHzoscillator(1000);
 80007a6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80007aa:	f7ff fd13 	bl	80001d4 <Delay_vMilliSecond16MHzoscillator>
		MGPIO_vWritePinData(GPIOA_PORT, GPIO_PIN_0, HIGH_STATE);
 80007ae:	e7c8      	b.n	8000742 <main+0x7a>

080007b0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80007b0:	480d      	ldr	r0, [pc, #52]	; (80007e8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80007b2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80007b4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80007b8:	480c      	ldr	r0, [pc, #48]	; (80007ec <LoopForever+0x6>)
  ldr r1, =_edata
 80007ba:	490d      	ldr	r1, [pc, #52]	; (80007f0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80007bc:	4a0d      	ldr	r2, [pc, #52]	; (80007f4 <LoopForever+0xe>)
  movs r3, #0
 80007be:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80007c0:	e002      	b.n	80007c8 <LoopCopyDataInit>

080007c2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80007c2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80007c4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80007c6:	3304      	adds	r3, #4

080007c8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80007c8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80007ca:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80007cc:	d3f9      	bcc.n	80007c2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80007ce:	4a0a      	ldr	r2, [pc, #40]	; (80007f8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80007d0:	4c0a      	ldr	r4, [pc, #40]	; (80007fc <LoopForever+0x16>)
  movs r3, #0
 80007d2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80007d4:	e001      	b.n	80007da <LoopFillZerobss>

080007d6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80007d6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80007d8:	3204      	adds	r2, #4

080007da <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80007da:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80007dc:	d3fb      	bcc.n	80007d6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80007de:	f000 f811 	bl	8000804 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80007e2:	f7ff ff71 	bl	80006c8 <main>

080007e6 <LoopForever>:

LoopForever:
    b LoopForever
 80007e6:	e7fe      	b.n	80007e6 <LoopForever>
  ldr   r0, =_estack
 80007e8:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80007ec:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80007f0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80007f4:	0800086c 	.word	0x0800086c
  ldr r2, =_sbss
 80007f8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80007fc:	2000001c 	.word	0x2000001c

08000800 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000800:	e7fe      	b.n	8000800 <ADC_IRQHandler>
	...

08000804 <__libc_init_array>:
 8000804:	b570      	push	{r4, r5, r6, lr}
 8000806:	4d0d      	ldr	r5, [pc, #52]	; (800083c <__libc_init_array+0x38>)
 8000808:	4c0d      	ldr	r4, [pc, #52]	; (8000840 <__libc_init_array+0x3c>)
 800080a:	1b64      	subs	r4, r4, r5
 800080c:	10a4      	asrs	r4, r4, #2
 800080e:	2600      	movs	r6, #0
 8000810:	42a6      	cmp	r6, r4
 8000812:	d109      	bne.n	8000828 <__libc_init_array+0x24>
 8000814:	4d0b      	ldr	r5, [pc, #44]	; (8000844 <__libc_init_array+0x40>)
 8000816:	4c0c      	ldr	r4, [pc, #48]	; (8000848 <__libc_init_array+0x44>)
 8000818:	f000 f818 	bl	800084c <_init>
 800081c:	1b64      	subs	r4, r4, r5
 800081e:	10a4      	asrs	r4, r4, #2
 8000820:	2600      	movs	r6, #0
 8000822:	42a6      	cmp	r6, r4
 8000824:	d105      	bne.n	8000832 <__libc_init_array+0x2e>
 8000826:	bd70      	pop	{r4, r5, r6, pc}
 8000828:	f855 3b04 	ldr.w	r3, [r5], #4
 800082c:	4798      	blx	r3
 800082e:	3601      	adds	r6, #1
 8000830:	e7ee      	b.n	8000810 <__libc_init_array+0xc>
 8000832:	f855 3b04 	ldr.w	r3, [r5], #4
 8000836:	4798      	blx	r3
 8000838:	3601      	adds	r6, #1
 800083a:	e7f2      	b.n	8000822 <__libc_init_array+0x1e>
 800083c:	08000864 	.word	0x08000864
 8000840:	08000864 	.word	0x08000864
 8000844:	08000864 	.word	0x08000864
 8000848:	08000868 	.word	0x08000868

0800084c <_init>:
 800084c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800084e:	bf00      	nop
 8000850:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000852:	bc08      	pop	{r3}
 8000854:	469e      	mov	lr, r3
 8000856:	4770      	bx	lr

08000858 <_fini>:
 8000858:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800085a:	bf00      	nop
 800085c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800085e:	bc08      	pop	{r3}
 8000860:	469e      	mov	lr, r3
 8000862:	4770      	bx	lr
